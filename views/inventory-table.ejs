<!-- views/inventory-table.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory Table</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <style>
        button#resetSearch {
            position: absolute;
            right: 26%;
        }
    </style>
</head>

<body class="bg-gray-100 p-6">
    <div class="max-w-full">
        <h1 class="text-3xl font-bold mb-6">Inventory Management</h1>

        <!-- Search and Filters -->
        <div class="bg-white p-4 rounded-lg shadow mb-6 fixed top-0 left-0 right-0 z-10">
            <div class="flex flex-wrap w-full gap-4" id="searchContainer">
                <form id="searchForm" class="flex flex-wrap w-full gap-4">
                    <div class="flex-1 min-w-[800px] flex relative">
                        <input type="text" name="search" id="searchInput" value="<%= search %>"
                            placeholder="Search inventory... Type to filter results"
                            class="w-3/4 px-4 mr-2 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <select style="display: none;" name="limit"
                            class="w-1/4 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <option value="100">100 per page</option>
                        </select>
                        <button type="button" id="resetSearch"
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                            style="display: none;">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20"
                                fill="currentColor">
                                <path fill-rule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                                    clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Table -->
        <div class="bg-white rounded-lg shadow overflow-x-auto">
            <table class="min-w-full">
                <thead>
                    <tr class="bg-gray-50">
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Year</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Make</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Model</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trim</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mileage</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">VIN</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Location</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stock Number</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cost</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <% inventory.forEach(item => { %>
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.fields?.year || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.fields?.make || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <%= item.fields?.model || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.fields?.trim || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.fields?.mileage ? Number(item.fields.mileage).toLocaleString() : 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.vin || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.fields?.location || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= item.stock_number || 'N/A' %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <span class="text-sm ml-1">$</span>
                                <%= item.fields.price || '0' %>
                            </td>
                        </tr>
                    <% }); %>
                    <% if (inventory.length === 0) { %>
                        <tr>
                            <td colspan="9" class="px-6 py-4 text-center text-sm text-gray-500">
                                No inventory items found
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.querySelector('input[name="search"]');
            const inventoryTable = document.querySelector('tbody');
            const searchForm = document.querySelector('form');

            if (!searchInput || !inventoryTable || !searchForm) {
                console.error('Required elements not found');
                return;
            }

            function updateTableContent(data) {
                inventoryTable.innerHTML = data.map(item => `
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.fields?.year || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.fields?.make || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap">${item.fields?.model || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.fields?.trim || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.fields?.mileage ? Number(item.fields.mileage).toLocaleString() : 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.vin || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.fields?.location || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${item.stock_number || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><span class="text-sm ml-1">$</span>${item.fields?.price || '0'}</td>
                    </tr>
                `).join('');
            }

            const performSearch = async () => {
                const searchValue = searchInput.value;

                try {
                    const response = await fetch(`/api/inventory/search?search=${encodeURIComponent(searchValue)}`, {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json'
                        }
                    });

                    if (!response.ok) throw new Error('Search failed');

                    const data = await response.json();
                    updateTableContent(data);
                } catch (error) {
                    console.error('Search error:', error);
                }
            };

            const resetButton = document.getElementById('resetSearch');
            if (resetButton) {
                resetButton.addEventListener('click', () => {
                    searchInput.value = '';
                    performSearch();
                });
            }

            // Show/hide reset button based on search input
            searchInput.addEventListener('input', () => {
                resetButton.style.display = searchInput.value ? 'block' : 'none';
            });

            // Initial load of results
            performSearch(); 

            // Event listeners
            searchInput.addEventListener('input', performSearch);
            searchForm.addEventListener('submit', (e) => {
                e.preventDefault();
                performSearch();
            });
        });
    </script>
</body>

</html>